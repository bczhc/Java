<%@ page import="org.json.JSONException" %>
<%@ page import="org.json.JSONObject" %>
<%@ page import="pers.zhc.u.FileU" %>
<%@ page import="java.io.*" %>
<%@ page pageEncoding="utf-8" %>
<%
    InputStream is = request.getInputStream();
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    int b = is.read();
    if (b == -1) {
//        out.print("\n接受multipart上传，文件头信息范围为0-127的byte，以(byte) 0结尾。\n");
        response.setStatus(403);
%>
<div style="text-align: center; margin: 1% auto auto">
    <h1>403 Forbidden.</h1>
</div>
<%
        return;
    }
%>
<%
    baos.write(b);
    baos.flush();
    while ((b = is.read()) != -1) {
        if (b == 0) break;
        baos.write(b);
        baos.flush();
    }
    String headInformation = new String(baos.toByteArray());
    baos.close();
    System.out.println("received file " + headInformation + "...");
    out.print(headInformation);
    File d = new File(request.getServletContext().getRealPath("WEB-INF/upload"));
    if (!d.exists()) {
        System.out.println("d.mkdirs() = " + d.mkdirs());
    }
    String fileName = null;
    try {
        JSONObject jsonObject = new JSONObject(headInformation);
        fileName = jsonObject.getString("name");
    } catch (JSONException e) {
        e.printStackTrace();
    }
    if (fileName == null) {
        fileName = String.valueOf(System.currentTimeMillis());
    }
    File f = findNewName(new File(d.toString() + File.separatorChar + fileName));
    OutputStream os = new FileOutputStream(f, false);
    /*int readLen;
    while ((readLen = is.read(bytes)) != -1) {
        os.write(bytes, 0, readLen);
        os.flush();
    }
    os.close();*/
    FileU.StreamWrite(is, os);
    os.close();
    is.close();
    System.out.println("done");
%>
<%!
    private File findNewName(File f) {
        if (!f.exists()) {
            return f;
        }
        String x = "." + new FileU().getFileExtension(f);
        String path = f.getPath();
        StringBuilder fP = new StringBuilder(path.substring(0, path.lastIndexOf('.')));
        File file;
        for (int i = 2; ; ++i) {
            if (fP.toString().matches("^.*\\([0-9]+\\)$")) {
                fP = new StringBuilder(fP.substring(0, fP.length() - 3) + "(" + i + ")");
            } else fP.append(" (2)");
            if (!(file = new File(fP + x)).exists()) {
                return file;
            }
        }
    }
%>